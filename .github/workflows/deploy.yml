name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (so it can work with static hosting).
          static_site_generator: next
          
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Debug environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Next.js version: $(npx next --version)"
          echo "Environment variables:"
          env | grep -E "(GITHUB|NODE)" || true
          
      - name: Debug Next.js config
        run: |
          echo "Next.js configuration:"
          cat next.config.ts
          
      - name: Build with Next.js
        run: |
          echo "Starting build process..."
          npm run build
          echo "Build completed."
        env:
          NODE_ENV: production
          GITHUB_ACTIONS: true
        
      - name: Verify build output
        run: |
          echo "Build completed. Checking output..."
          pwd
          echo "Root directory contents:"
          ls -la
          echo "Checking for .next directory:"
          if [ -d ".next" ]; then
            echo "✅ .next directory exists"
            ls -la .next/
          else
            echo "❌ .next directory not found"
          fi
          echo "Checking for out directory:"
          if [ -d "out" ]; then
            echo "✅ out directory exists"
            echo "Contents of out directory:"
            ls -la out/
            echo "Total size of out directory:"
            du -sh out/
          else
            echo "❌ out directory not found"
            echo "Let's check if there are any build artifacts:"
            find . -name "*.html" -o -name "*.js" -o -name "*.css" | head -20
            exit 1
          fi
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 